 This Program uses Dijkstra's algorithm to find the smallest path between two 'cities'
 Please enter the size of the array A[1:n,1:n] as n: (0 to stop)
4
 Please enter the data for A:
0 10 5 0
10 0 3 2
5 3 0 6
0 2 6 0
 Now please enter the starting and ending points (m and k respectively)
1 4
 Calculating... B will be printed at each step.
            0          53          53          53
            0          10           5          11
            0           8           5          10
            0           8           5          10
 The shortest path from    1  to    4  is:    10
 Please enter the size of the array A[1:n,1:n] as n: (0 to stop)
4
 Please enter the data for A:
0 4 0 1
4 0 1 1
0 1 0 3
1 1 3 0
 Now please enter the starting and ending points (m and k respectively)
1 4
 Calculating... B will be printed at each step.
            0          21          21          21
            0           4           5           1
            0           2           3           1
            0           2           3           1
 The shortest path from    1  to    4  is:     1
 Please enter the size of the array A[1:n,1:n] as n: (0 to stop)
5
 Please enter the data for A:
0 2 10 7 0
2 0 8 0 1
10 8 0 1 4
7 0 1 0 10
0 1 4 10 0
 Now please enter the starting and ending points (m and k respectively)
1 3
 Calculating... B will be printed at each step.
            0          87          87          87          87
            0           2          10           7           3
            0           2           7           7           3
            0           2           7           7           3
 The shortest path from    1  to    3  is:     7
 Please enter the size of the array A[1:n,1:n] as n: (0 to stop)
0